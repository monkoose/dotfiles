set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term st
set $menu rofi -show run

# swaymsg -t get_outputs
output * bg #272219 solid_color

# Turn off screen after 10 minutes of inactivity
exec swayidle -w timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"'

### Default options
focus_follows_mouse no
workspace_layout tabbed
hide_edge_borders smart

font "Noto Sans 16px"
titlebar_border_thickness 0
titlebar_padding 10 0
client.focused #9c5c10 #9c5c10 #111111

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+Shift+q kill
    bindsym --border button1+button3 kill

    # Start your launcher
    bindsym --to-code $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'Log out?' -B 'Yes, exit sway' 'swaymsg exit'

    # Close godot game window
    bindsym --to-code F2 [title=".*(DEBUG)"] kill
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus prev
    bindsym --to-code $mod+$right focus next
    bindsym --to-code $mod+$down focus next
    bindsym --to-code $mod+$up focus prev
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-6 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym --to-code $left resize shrink width 10px
        bindsym --to-code $down resize grow height 10px
        bindsym --to-code $up resize shrink height 10px
        bindsym --to-code $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }

    bindsym --to-code $mod+Shift+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    bindsym Print exec grim

#
# Input:
#
    input * {
        xkb_layout "us,ru"
        xkb_options "grp:win_space_toggle"
    }

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
    bar {
        position bottom
        height 20
        font "Noto Sans 16px"

        # When the status_command prints a new line to stdout, swaybar updates.
        # The default just shows the current date and time.
        # status_command while echo 'en'; do sleep 1; done
        status_command while date +'  %Y-%m-%d    %H:%M  '; do sleep 5; done

        colors {
            statusline #9c6c2c
            background #000000
            focused_workspace #000000 #000000 #ac6c2c
            inactive_workspace #000000 #000000 #3c3c3c
        }
    }

#
# Rules:
#
    for_window [app_id="org.godotengine.ProjectManager"] floating enable
    for_window [app_id="org.pulseaudio.pavucontrol"] floating enable
    for_window [app_id="transmission-gtk"] floating enable

# Include other sway config files
include /etc/sway/config.d/*
