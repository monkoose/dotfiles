# set previewer '~/.config/lf/previewer.sh'
set autoquit
set drawbox
set errorfmt "\033[37;48;5;52;1m %s \033[0m"
set findlen 2
set ifs "\n"
set incsearch
set mouse
set promptfmt "\033[0m \033[34;1m%d\033[0m\033[1m%f\033[0m%S%F "
set ratios 1:3:4
set scrolloff 3
set shellopts "-eu"
set tabstop 4
set cursorpreviewfmt ""

# # hide gitignore files
# cmd on-cd %{{
#     hf='.*'
#     for file in $(git check-ignore *); do
#         hf+=":${file}"
#     done
#     lf -remote "send $id set hiddenfiles $hf"
# }}
# on-cd

cmd q quit

# This command is called when current file is not a directory
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/* | application/json | application/javascript) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f &> /dev/null & done;;
    esac
}}

# requires https://github.com/umlx5h/gtrash
cmd delete %gtrash put $fx
cmd gtr $gtrash restore
cmd gtf !gtrash find
cmd gtc $gtrash prune --day 0

# open fzf files on start
cmd vim-cd &{{
    lf -remote "send $id \$vim +'vim9 timer_start(15, (_) => execute(\"FzfFiles\"))'"
}}

cmd mkdir %{{
    if [[ "$#" > 0 ]]; then
        mkdir -p "$@"
    else
        echo " Directory Name: "
        read ans
        mkdir -p $ans
    fi
}}

# Extract the current file with the right command
cmd extract %{{
    set -f
    for file in $fx; do
        atool --extract $file || echo " $file is not archive."
    done
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# paste copied/moved files with overwrite
# requires rsync
cmd paste-overwrite &{{
    set -f
    mode=$(head -1 ~/.local/share/lf/files)
    list=$(sed 1d ~/.local/share/lf/files)
    set -- _ $list; shift
    [ $# -gt 0 ] || exit
    case $mode in
        copy)
            rsync -r "$@" ./
            ;;
        move)
            rsync -r --remove-source-files "$@" ./
            ;;
    esac
    lf -remote 'save\nmove\n'
    lf -remote "send $id load"
    lf -remote "send $id echo \"\033[0;32mpasted $# file(s)\033[0m\""
}}

# custom keybindings
map g/ cd /
map gu cd /usr
map gtr gtr
map gtf gtf
map gtc gtc
map <c-j> half-down
map <c-k> half-up
map ; read
map u :{{
    unselect
    clear
}}
map <backspace> find-prev
map <c-l> find-next
map D delete
map E vim-cd
map a extract
map <a-1> quit
map x $$f

map p
map pp paste
map po paste-overwrite

# vim: ft=conf
