set previewer '~/.config/lf/previewer.sh'
set autoquit
set drawbox
set errorfmt "\033[37;48;5;52;1m %s \033[0m"
set findlen 2
set ifs "\n"
set incsearch
set mouse
set promptfmt "\033[0m \033[34;1m%d\033[0m\033[1m%f\033[0m%S%F "
set ratios 1:3:4
set scrolloff 3
set shellopts "-eu"
set tabstop 4

cmd q quit

# This command is called when current file is not a directory
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*|application/json) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd delete %trash-put $fx
cmd trash-restore $trash-restore
cmd trash-empty %trash-empty -f
cmd trash-list !trash-list

cmd vim-cd &{{
    lf -remote "send $id \$vim +'vim9 timer_start(15, (_) => execute(\"FzfFiles\"))'"
}}

cmd mkdir %{{
    if [[ "$#" > 0 ]]; then
        mkdir -p "$@"
    else
        echo " Directory Name: "
        read ans
        mkdir -p $ans
    fi
}}

# Extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# custom keybindings
map g/ cd /
map gu cd /usr
map <c-j> half-down
map <c-k> half-up
map ; read
map u :{{
    unselect
    clear
}}
map <backspace> find-prev
map <c-l> find-next
map D delete
map E vim-cd
map a extract
map <a-1> quit

# vim: ft=conf
